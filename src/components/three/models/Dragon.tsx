/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 scene.gltf --types --shadows
Author: endlessvoidmc (https://sketchfab.com/endlessvoidmc)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/demon-dragon-full-texture-19035a72cdcb4abfa2c161de32823e6b
Title: Demon Dragon Full Texture
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_8: THREE.SkinnedMesh;
    Object_9: THREE.SkinnedMesh;
    Object_10: THREE.SkinnedMesh;
    GLTF_created_0_rootJoint: THREE.Bone;
  };
  materials: {
    Material_0: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "flying_skeletal.3"
  | "idle_skeletal.3"
  | "running_skeletal.3";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Dragon(props: JSX.IntrinsicElements["group"]) {
  const group = React.createRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "models/dragon/scene.gltf"
  ) as GLTFResult;

  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    const action = actions["flying_skeletal.3"];
    action?.play();
    return () => {
      action?.stop();
      action?.reset();
    };
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={3.83}
        >
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="RootNode0_222" scale={0.01}>
                <group name="skeletal3_221">
                  <group name="GLTF_created_0">
                    <primitive object={nodes.GLTF_created_0_rootJoint} />
                    <group name="dragon_wings22_220" />
                    <skinnedMesh
                      name="Object_8"
                      geometry={nodes.Object_8.geometry}
                      material={materials.Material_0}
                      skeleton={nodes.Object_8.skeleton}
                    />
                    <skinnedMesh
                      name="Object_9"
                      geometry={nodes.Object_9.geometry}
                      material={materials.Material_0}
                      skeleton={nodes.Object_9.skeleton}
                    />
                    <skinnedMesh
                      name="Object_10"
                      geometry={nodes.Object_10.geometry}
                      material={materials.Material_0}
                      skeleton={nodes.Object_10.skeleton}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("models/dragon/scene.gltf");
